#!/usr/bin/env roseus

(require :unittest "lib/llib/unittest.l")
(require "package://jsk_arc2017_baxter/euslisp/lib/baxter.l")

(init-unit-test)

(deftest test-robot-safe
  (let (robot)
    (setq robot (instance jsk_arc2017_baxter::baxter-robot-safe :init))
    (send robot :reset-pose)
    (assert (null (send robot :self-collision-check)))
    (send robot :reset-manip-pose)
    (assert (null (send robot :self-collision-check)))
    (send robot :tuck-pose)
    (assert (null (send robot :self-collision-check)))
    (send robot :untuck-pose)
    (assert (null (send robot :self-collision-check)))
    (send robot :arc-reset-pose)
    (assert (null (send robot :self-collision-check)))
    (dolist (arm '(:larm :rarm))
      (send robot :reset-pose)
      (dolist (bin '(:a :b :c :d :e :f :g :h :i :j :k :l))
        (if (send robot :avoid-shelf-pose arm bin)
          (assert (null (send robot :self-collision-check))))
        (if (send robot :view-hand-pose arm bin)
          (assert (null (send robot :self-collision-check))))))
    (send robot :hand-grasp-pose :larm :opposed)
    (send robot :hand-grasp-pose :rarm :opposed)
    (assert (null (send robot :self-collision-check)))
    (send robot :hand-grasp-pose :larm :spherical)
    (send robot :hand-grasp-pose :rarm :spherical)
    (assert (null (send robot :self-collision-check)))
    (send robot :hand-grasp-pose :larm :cylindrical)
    (send robot :hand-grasp-pose :rarm :cylindrical)
    (assert (null (send robot :self-collision-check)))
    (send robot :hand-grasp-pre-pose :larm :opposed)
    (send robot :hand-grasp-pre-pose :rarm :opposed)
    (assert (null (send robot :self-collision-check)))
    (send robot :hand-grasp-pre-pose :larm :spherical)
    (send robot :hand-grasp-pre-pose :rarm :spherical)
    (assert (null (send robot :self-collision-check)))
    (send robot :hand-grasp-pre-pose :larm :cylindrical)
    (send robot :hand-grasp-pre-pose :rarm :cylindrical)
    (assert (null (send robot :self-collision-check)))))

(run-all-tests)
(exit)
